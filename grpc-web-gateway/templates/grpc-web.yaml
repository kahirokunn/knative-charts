kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: {{ .Values.grpcWeb.gateway.class }}
spec:
  controllerName: {{ .Values.grpcWeb.gateway.controller.name }}
  parametersRef:
    name: {{ .Values.grpcWeb.gateway.class }}
    group: operator.projectcontour.io
    kind: Contour
---
kind: Gateway
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: {{ .Values.grpcWeb.gateway.name }}
  namespace: {{ .Release.Namespace }}
spec:
  gatewayClassName: {{ .Values.grpcWeb.gateway.class }}
  listeners:
    - name: {{ .Values.grpcWeb.gateway.httpListener.name }}
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: contour
  namespace: {{ .Release.Namespace }}
data:
  contour.yaml: |
    gateway:
      controllerName: {{ .Values.grpcWeb.gateway.controller.name }}
---
apiVersion: operator.projectcontour.io/v1alpha1
kind: Contour
metadata:
  name: {{ .Values.grpcWeb.gateway.class }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 2
  namespace:
    name: {{ .Release.Namespace }}
  networkPublishing:
    envoy:
      type: LoadBalancerService
      loadBalancer:
        providerParameters:
          type: AWS
        scope: External
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: kourier-gateway
  namespace: knative-serving
spec:
  parentRefs:
    - name: {{ .Values.grpcWeb.gateway.name }}
      namespace: {{ .Release.Namespace }}
      sectionName: {{ .Values.grpcWeb.gateway.httpListener.name }}
  rules:
    - matches:
        - path:
            type: Exact
            value: /
      backendRefs:
        - name: kourier-internal
          namespace: knative-serving
          port: 80
